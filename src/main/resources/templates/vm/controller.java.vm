package ${package.Controller};

import com.supermarket.common.Result;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.beans.factory.annotation.Autowired;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Api(value = "${table.controllerName}", tags= { "$!{table.comment}"})
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
public class ${table.controllerName}{

    @Autowired
    private ${table.serviceName} ${table.entityPath}Service;

    @PostMapping("/list")
    @ApiOperation(value = "分页查询数据")
    public Result page(Page page, ${entity} ${table.entityPath}){
        LambdaQueryWrapper<${entity}> wrapper = new QueryWrapper().lambda();
        IPage<${entity}> result = ${table.entityPath}Service.page(page, wrapper);
        return Result.success(result);
    }

    @PostMapping("/findById")
    @ApiOperation(value = "根据主键查询")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "id", value = "ID", required = true,
                dataType = "Long", paramType = "query")
    })
    public Result findById(Long id) {
        if(id == null){
            return Result.fail("主键不能为空");
        }
        ${entity} ${table.entityPath} = ${table.entityPath}Service.getById(id);
        return Result.success(${table.entityPath});
    }

    @PostMapping("/save")
    @ApiOperation(value = "新增")
    public Result save(${entity} ${table.entityPath}){
        boolean result = ${table.entityPath}Service.save(${table.entityPath});
        return Result.success(result);
    }

    @PostMapping("/update")
    @ApiOperation(value = "修改")
    public Result update(${entity} ${table.entityPath}) {
    boolean result = ${table.entityPath}Service.updateById(${table.entityPath});
        return Result.success(result);
    }

    @PostMapping("/delete")
    @ApiOperation(value = "根据主键删除")
    @ApiImplicitParams({
        @ApiImplicitParam(name = "id", value = "ID", required = true,
                dataType = "Long", paramType = "query")
    })
    public Result delete(Long id){
        if(id == null){
            return Result.fail("主键不能为空");
        }
        boolean result = ${table.entityPath}Service.removeById(id);
        return Result.success(result);
    }
}